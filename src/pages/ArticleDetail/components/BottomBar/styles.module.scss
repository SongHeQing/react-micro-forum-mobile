@use "sass:math";

// 公共的vw计算函数
@function vw($px) {
  @return math.div($px, 1260) * 100vw;
}

@function vh($px) {
  @return math.div($px, 1260) * 65vh;
}

@function rfs($px, $min: 0px) {
  @return clamp($min, vw($px), vh($px));
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5); // 半透明背景
  z-index: 19; // 确保在 bottomBar 下方
  // 可以添加过渡效果
  overscroll-behavior: contain;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;

  // 激活状态由 JS 控制渲染，或者可以这样写
  &.active {
    // 如果你想通过 CSS 来控制显示/隐藏
    opacity: 1;
    visibility: visible;
  }
}


.bottomBar {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 20; // 确保在 overlay 上方

  display: flex;
  align-items: center;
  justify-content: center; // 默认居中占位符

  width: clamp(0px, 100vw, 65vh); // 限制最大宽度，防止桌面端过宽
  height: rfs(168); // 默认高度
  margin: 0 auto;
  padding: rfs(29) rfs(36) rfs(29) rfs(40);
  border-top: rfs(1) solid #ededee;
  background: #fff;
  box-shadow: 0 -2px 8px 0 rgba(0, 0, 0, 0.04);
  // transition: all 0.3s ease-in-out;

  .inputPlaceholder {
    flex: 1;
    height: rfs(110);
    border-radius: rfs(55);
    padding: 0 rfs(39);
    margin-right: rfs(55);
    background: #f7f7f7;
    display: flex;
    align-items: center;
    cursor: pointer;

    .placeholderText {
      font-size: rfs(41);
      color: #999;
    }
  }

  // 激活状态下 .bottomBar 自身的样式调整
  &.active {
    // top: 0;
    // left: 0; // 确保左右边缘也固定
    // right: 0;
    // bottom: 0; // 确保底部也固定
    // height: 100vh; // 铺满整个视口高度
    // width: 100vw; // 铺满整个视口宽度 (不再使用 clamp，因为是全屏遮罩)
    // background: rgba(0, 0, 0, 0.5); // 半透明背景，遮罩效果
    display: flex;
    flex-direction: column; // 内容垂直排列
    justify-content: flex-end; // 将浮层内容对齐到底部
    align-items: center; // 浮层内容水平居中
    padding: 0; // 激活状态下不再有内部 padding，避免影响布局
  }

  // 评论输入浮层容器
  .activeInputContainer {
    width: 100%; // 占据父容器的全部宽度
    max-width: clamp(0px, 100vw, 65vh); // 确保在桌面端评论框宽度不会过大
    background: #fff; // 浮层背景为白色
    // 浮层内部 padding 保持，这会在白色区域内部形成间距
    padding: rfs(29) rfs(36) rfs(29) rfs(40);
    border-top: rfs(1) solid #ededee; // 浮层顶部边框
    box-shadow: 0 -2px 8px 0 rgba(0, 0, 0, 0.04);
    display: flex;
    flex-direction: column;
    align-items: flex-end; // 发送按钮靠右
    padding-bottom: constant(safe-area-inset-bottom);
    /* iOS 刘海屏适配 */
    padding-bottom: env(safe-area-inset-bottom);
    /* iOS 刘海屏适配 */
  }

  // 新增回复预览区域样式
  .replyPreview {
    width: 100%;
    margin-bottom: rfs(10); // 与 textarea 之间的间距
    padding: rfs(12) rfs(15); // 预览区域的内边距
    background-color: #f0f2f5; // 预览区域背景色
    border-radius: rfs(8);
    // 单行显示，多余内容省略
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-size: rfs(42); // 字体大小
    color: #a3a3a6; // 字体颜色
  }

  .replyPreviewText {
    // 文本样式，确保没有额外的换行或间距
    display: inline;
  }

  .textarea {
    width: 100%;
    min-height: rfs(150);
    max-height: rfs(400);
    border-radius: rfs(20);
    padding: rfs(20) rfs(30);
    font-size: rfs(41);
    background: #f7f7f7;
    outline: none;
    border: rfs(1) solid #e0e0e0;
    resize: vertical;
    margin-bottom: rfs(20);
  }

  .sendBtn {
    background: #4e70f1;
    color: #fff;
    border: none;
    border-radius: 18px;
    font-size: 15px;
    font-weight: 500;
    padding: 0 18px;
    height: 36px;
    cursor: pointer;
    transition: background 0.2s;

    &:active {
      background: #3556b8;
    }
  }
}